steps:
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build dependencies'
    args: [ 'build', '--target', 'dependencies', '-t', 'eu.gcr.io/$PROJECT_ID/fitness-backend-dependencies:$SHORT_SHA', '.' ]

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Run lint'
    args: ['run', 'eu.gcr.io/$PROJECT_ID/fitness-backend-dependencies:$SHORT_SHA', 'npm', 'run', 'lint']
    waitFor:
      - 'Build dependencies'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Run unit tests from dependencies'
    args: ['run', 'eu.gcr.io/$PROJECT_ID/fitness-backend-dependencies:$SHORT_SHA', 'npm', 'run', 'test']
    waitFor:
      - 'Run lint'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build production image'
    args: [ 'build', '-t', 'eu.gcr.io/$PROJECT_ID/fitness-backend:$SHORT_SHA', '.' ]
    waitFor:
      - 'Run unit tests from dependencies'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push production image to Cloud registry'
    args: ['push', 'eu.gcr.io/$PROJECT_ID/fitness-backend:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy to Cloud Run'
    args: ['run', 'deploy', '${_CLOUD_RUN_SERVICE}', '--image', 'eu.gcr.io/$PROJECT_ID/fitness-backend:${SHORT_SHA}', '--region', '${_REGION}']

