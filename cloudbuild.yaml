steps:
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build dependencies'
    args: [ 'build', '--target', 'dependencies', '-t', 'eu.gcr.io/$PROJECT_ID/fitness-backend-dependencies:$SHORT_SHA', '.' ]

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Run lint'
    args: ['run', 'eu.gcr.io/$PROJECT_ID/fitness-backend-dependencies:$SHORT_SHA', 'npm', 'run', 'lint']
    waitFor:
      - 'Build dependencies'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Run unit tests from dependencies'
    args: ['run', 'eu.gcr.io/$PROJECT_ID/fitness-backend-dependencies:$SHORT_SHA', 'npm', 'run', 'test']
    waitFor:
      - 'Run lint'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build production image'
    args: [ 'build', '-t', 'eu.gcr.io/$PROJECT_ID/fitness-backend:$SHORT_SHA', '.' ]
    waitFor:
      - 'Run unit tests from dependencies'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push production image to Cloud registry'
    args: ['push', 'eu.gcr.io/$PROJECT_ID/fitness-backend:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy to Cloud Run'
    args: 
      [
        'run', 
        'deploy', 
        '${_CLOUD_RUN_SERVICE}', 
        '--image', 
        'eu.gcr.io/$PROJECT_ID/fitness-backend:${SHORT_SHA}', 
        '--region', 
        '${_REGION}'
      ]

  # Force the new revision to serve 100% of traffic.
  - name: 'gcr.io/cloud-builders/gcloud'
    id: "Ensure prod service live"
    args:
      [
        "run",
        "services",
        "update-traffic",
        "${_SERVICE_NAME}",
        "--to-latest",
        "--platform",
        "managed",
        "--region",
        "${_REGION}",
      ]

  # Cleanup tags against closed pull requests
  - id: "clean up old tag"
    name: "eu.gcr.io/${PROJECT_ID}/deployment-previews" # our custom builder
    secretEnv: ["GITHUB_TOKEN"]
    waitFor:
      - Ensure prod service live
    args:
      [
        "cleanup",
        "--project-id",
        "${PROJECT_ID}",
        "--region",
        "${_REGION}",
        "--service",
        "${_SERVICE_NAME}",
        "--repo-name",
        "${_GITHUB_OWNER}/${REPO_NAME}",
      ]

substitutions:
  _SERVICE_NAME: fitnessbackend
  _GITHUB_OWNER: $(push.repository.owner.name)

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/github_token/versions/latest
      env: "GITHUB_TOKEN"